package cn.ffcs.is.mss.analyzer.flink.alert

import java.util.Properties

import cn.ffcs.is.mss.analyzer.bean.BbasXssInjectionWarnEntity
import cn.ffcs.is.mss.analyzer.utils.{Constants, IniProperties, JsonUtil}
import org.apache.flink.configuration.Configuration
import org.apache.flink.streaming.api.TimeCharacteristic
import org.apache.flink.streaming.api.functions.AssignerWithPunctuatedWatermarks
import org.apache.flink.streaming.api.scala._
import org.apache.flink.streaming.api.watermark.Watermark
import org.apache.flink.streaming.api.windowing.time.Time
import org.apache.flink.streaming.connectors.kafka.{FlinkKafkaConsumer09, FlinkKafkaProducer09}
import org.apache.flink.streaming.util.serialization.SimpleStringSchema

/**
  * @Auther chenwei
  * @Description
  * @Date: Created in 2018/12/17 00:19
  * @Modified By
  */
object XssInjectionWarnAlert {

  def main(args: Array[String]): Unit = {

    //根据传入的参数解析配置文件
    //val args0 = "/Users/chenwei/IdeaProjects/mss/src/main/resources/flink.ini"
    //val confProperties = new IniProperties(args0)
    val confProperties = new IniProperties(args(0))

    //该任务的名字
    val jobName = confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_JOB_NAME)
    //kafka Source的名字
    val kafkaSourceName = confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_KAFKA_SOURCE_NAME)
    //kafka sink的名字
    val kafkaSinkName = confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_KAFKA_SINK_NAME)

    //kafka Source的并行度
    val kafkaSourceParallelism = confProperties.getIntValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_KAFKA_SOURCE_PARALLELISM)
    //对数据处理的并行度
    val dealParallelism = confProperties.getIntValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_DEAL_PARALLELISM)
    //写入kafka的并行度
    val kafkaSinkParallelism = confProperties.getIntValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_KAFKA_SINK_PARALLELISM)

    //kafka的服务地址
    val brokerList = confProperties.getValue(Constants.FLINK_COMMON_CONFIG, Constants.KAFKA_BOOTSTRAP_SERVERS)
    //flink消费的group.id
    val groupId = confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_GROUP_ID)
    //kafka source 的topic
    val sourceTopic = confProperties.getValue(Constants.FLINK_XSS_INJECTION_CONFIG, Constants.XSS_INJECTION_KAFKA_SINK_TOPIC)
    //kafka sink 的topic
    val sinkTopic = confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_CONFIG, Constants.ALERT_STATISTICS_KAFKA_TOPIC)


    //flink全局变量
    val parameters: Configuration = new Configuration()
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_NAME, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_NAME))
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_TYPE, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_TYPE))
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_REGION, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_REGION))
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_BUSINESS, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_BUSINESS))
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_DOMAIN, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_DOMAIN))
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_IP, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_IP))
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_DEVICE, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_DEVICE))
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_RULE_ID, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_RULE_ID))
    parameters.setString(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_TIMESTAMP_FORMAT, confProperties.getValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_TIMESTAMP_FORMAT))
    parameters.setInteger(Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_ASSEMBLY, confProperties.getIntValue(Constants.FLINK_ALERT_STATISTICS_IP_VISIT_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_ALERT_ASSEMBLY))

    //check pointing的间隔
    val checkpointInterval = confProperties.getLongValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_CHECKPOINT_INTERVAL)

    //
    val waterMark = confProperties.getLongValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_WATERMARK)
    //聚合窗口大小
    val windowSize = confProperties.getLongValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_WINDOW_SIZE)
    //聚合滑动窗口大小
    val slideSize = confProperties.getLongValue(Constants.FLINK_ALERT_STATISTICS_XSS_INJECTION_CONFIG, Constants.ALERT_STATISTICS_XSS_INJECTION_SLIDE_SIZE)


    //获取ExecutionEnvironment
    val env = StreamExecutionEnvironment.getExecutionEnvironment
    //设置check pointing的间隔
    env.enableCheckpointing(checkpointInterval)
    //设置流的时间为EventTime
    env.setStreamTimeCharacteristic(TimeCharacteristic.EventTime)
    //设置flink全局变量
    env.getConfig.setGlobalJobParameters(parameters)

    //设置kafka消费者相关配置
    val props = new Properties()
    //设置kafka集群地址
    props.setProperty("bootstrap.servers", brokerList)
    //设置flink消费的group.id
    props.setProperty("group.id", groupId)

    //获取kafka消费者
    val consumer = new FlinkKafkaConsumer09[String](sourceTopic, new SimpleStringSchema, props).setStartFromGroupOffsets()
    //获取kafka生产者
    val producer = new FlinkKafkaProducer09[String](brokerList, sinkTopic, new SimpleStringSchema())
    // 获取kafka数据
    val dStream = env.addSource(consumer).setParallelism(kafkaSourceParallelism)
      .uid(kafkaSourceName).name(kafkaSourceName)

    val operationPersonnelDownloadWarnAlertStream = dStream
      .map(tuple => {
        (JsonUtil.fromJson[BbasXssInjectionWarnEntity](tuple), 1L)
      })
      .assignTimestampsAndWatermarks(new AssignerWithPunctuatedWatermarks[(BbasXssInjectionWarnEntity, Long)] {
        override def checkAndGetNextWatermark(lastElement: (BbasXssInjectionWarnEntity, Long), extractedTimestamp: Long): Watermark =
          new Watermark(extractedTimestamp - waterMark)

        override def extractTimestamp(element: (BbasXssInjectionWarnEntity, Long), previousElementTimestamp: Long): Long =
          element._1.getWarnDatetime.getTime
      }).setParallelism(dealParallelism)
      //.keyBy(_._1.getUsername)
      //.timeWindow(Time.milliseconds(windowSize), Time.milliseconds(slideSize))
      //.reduce((o1, o2) => {
      //  (o1._1, o1._2 + o2._2)
      //})
      .map(new XssInjectionWarnJsonMap)
      .map(JsonUtil.toJson(_))

    operationPersonnelDownloadWarnAlertStream.addSink(producer).uid(kafkaSinkName).name(kafkaSinkName)
      .setParallelism(kafkaSinkParallelism)

    env.execute(jobName)

  }
}
